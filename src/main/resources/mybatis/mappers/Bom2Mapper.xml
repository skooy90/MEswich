<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.mes.dao.Bom2DAO">

    <!-- 전체 조회 -->
<select id="selectAllProducts" resultType="kr.or.mes.dto.Bom2DTO">
    SELECT DISTINCT
        MIN(b.bom_id) AS bomId,      <!-- ✅ 추가 -->
        b.product_code AS productCode,
        p.item_name AS productName,
        MIN(b.created_by) AS createdBy,
        MAX(b.created_date) AS createdDate
    FROM BOM2 b
    JOIN Standard2 p ON b.product_code = p.item_code
    GROUP BY b.product_code, p.item_name
    ORDER BY MAX(b.created_date) DESC
</select>
    
    

    <!-- 단건 조회 -->
    <select id="selectById" parameterType="String" resultType="kr.or.mes.dto.Bom2DTO">
        SELECT
            b.bom_id AS bomId,
            b.product_code AS productCode,
            p.item_name AS productName,
            b.material_code AS materialCode,
            m.item_name AS materialName,
            b.quantity AS quantity,
            b.unit AS unit,
            b.created_by AS createdBy,
            b.created_date AS createdDate,
            b.updated_by AS updatedBy,
            b.updated_date AS updatedDate
        FROM BOM2 b
            LEFT JOIN Standard2 p ON b.product_code = p.item_code
            LEFT JOIN Standard2 m ON b.material_code = m.item_code
        WHERE b.bom_id = #{bomId}
    </select>

    <!-- 제품코드 기준 자재 목록 조회 -->
    <select id="selectMaterialListByProductCode" parameterType="String" resultType="kr.or.mes.dto.Bom2DTO">
        SELECT
            b.material_code AS materialCode,
            s.item_name AS materialName,
            b.quantity,
            b.unit
        FROM BOM2 b
            LEFT JOIN Standard2 s ON b.material_code = s.item_code
        WHERE b.product_code = #{productCode}
        ORDER BY b.material_code
    </select>

    <!-- 등록 -->
    <insert id="insert" parameterType="kr.or.mes.dto.Bom2DTO">
        INSERT INTO BOM2 (
            product_code, material_code, unit, quantity, created_by
        ) VALUES (
            #{productCode}, #{materialCode}, #{unit}, #{quantity}, #{createdBy}
        )
    </insert>

    <!-- 수정 -->
<update id="update" parameterType="kr.or.mes.dto.Bom2DTO">
    UPDATE BOM2
    SET product_code = #{productCode},
        material_code = #{materialCode},
        unit = #{unit},
        quantity = #{quantity},
        updated_by = #{updatedBy},
        updated_date = SYSDATE
    WHERE bom_id = #{bomId}
</update>

    <!-- 단위·수량 수정 (Ajax용) -->
    <update id="updateBomMaterial" parameterType="kr.or.mes.dto.Bom2DTO">
        UPDATE BOM2
        SET unit = #{unit},
            quantity = #{quantity},
            updated_by = #{updatedBy},
            updated_date = SYSDATE
        WHERE product_code = #{productCode}
          AND material_code = #{materialCode}
    </update>

    <!-- BOM 자재 삭제 (Ajax용) -->
    <delete id="deleteBomMaterial" parameterType="kr.or.mes.dto.Bom2DTO">
        DELETE FROM BOM2
        WHERE product_code = #{productCode}
          AND material_code = #{materialCode}
    </delete>

    <!-- 삭제 -->
    <delete id="delete" parameterType="String">
        DELETE FROM BOM2 WHERE product_code = #{productCode}
    </delete>
    
    <select id="checkDuplicate" parameterType="kr.or.mes.dto.Bom2DTO" resultType="int">
    SELECT COUNT(*) FROM BOM2
    WHERE product_code = #{productCode}
      AND material_code = #{materialCode}
</select>

    <select id="getRegisteredProductCodes" resultType="String">
        SELECT DISTINCT product_code
        FROM BOM2
    </select>

</mapper>
