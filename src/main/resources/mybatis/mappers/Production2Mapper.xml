<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mes.mappers.qqqqqqqProduction2">

    <!-- 생산 LOT 전체 조회 (Standard 테이블과 조인) -->
    <select id="selectAllProduction" resultType="kr.or.mes.dto.Production2DTO">
        SELECT 
            p.lot_number as lotNumber,
            p.product_code as productCode,
            s.item_name as productName,
            p.planned_qty as plannedQty,
            p.actual_qty as actualQty,
            p.status,
            p.planned_start_date as plannedStartDate,
            p.planned_end_date as plannedEndDate,
            p.actual_start_date as actualStartDate,
            p.actual_end_date as actualEndDate,
            p.created_date as createdDate,
            p.updated_date as updatedDate,
            p.created_by as createdBy,
            p.updated_by as updatedBy
        FROM Production2 p
        LEFT JOIN Standard2 s ON p.product_code = s.item_code
        ORDER BY p.created_date DESC
    </select>

    <!-- 생산 LOT 조건별 검색 (Standard 테이블과 조인) -->
    <select id="selectProductionByCondition" parameterType="kr.or.mes.dto.Production2DTO" resultType="kr.or.mes.dto.Production2DTO">
        SELECT 
            p.lot_number as lotNumber,
            p.product_code as productCode,
            s.item_name as productName,
            p.planned_qty as plannedQty,
            p.actual_qty as actualQty,
            p.status,
            p.planned_start_date as plannedStartDate,
            p.planned_end_date as plannedEndDate,
            p.actual_start_date as actualStartDate,
            p.actual_end_date as actualEndDate,
            p.created_date as createdDate,
            p.updated_date as updatedDate,
            p.created_by as createdBy,
            p.updated_by as updatedBy
        FROM Production2 p
        LEFT JOIN Standard2 s ON p.product_code = s.item_code
        <where>
            <if test="lotNumber != null and lotNumber != ''">
                AND p.lot_number LIKE '%' || #{lotNumber} || '%'
            </if>
            <if test="productCode != null and productCode != ''">
                AND p.product_code LIKE '%' || #{productCode} || '%'
            </if>
            <if test="status != null and status != ''">
                AND p.status = #{status}
            </if>
        </where>
        ORDER BY p.created_date DESC
    </select>

    <!-- 생산 LOT 단건 조회 (Standard 테이블과 조인) -->
    <select id="selectProductionByLotNumber" parameterType="string" resultType="kr.or.mes.dto.Production2DTO">
        SELECT 
            p.lot_number as lotNumber,
            p.product_code as productCode,
            s.item_name as productName,
            p.planned_qty as plannedQty,
            p.actual_qty as actualQty,
            p.status,
            p.planned_start_date as plannedStartDate,
            p.planned_end_date as plannedEndDate,
            p.actual_start_date as actualStartDate,
            p.actual_end_date as actualEndDate,
            p.created_date as createdDate,
            p.updated_date as updatedDate,
            p.created_by as createdBy,
            p.updated_by as updatedBy
        FROM Production2 p
        LEFT JOIN Standard2 s ON p.product_code = s.item_code
        WHERE p.lot_number = #{lotNumber}
    </select>

    <!-- 생산 LOT 등록 (lot_number는 트리거로 자동 생성) -->
    <insert id="insertProduction" parameterType="kr.or.mes.dto.Production2DTO">
        INSERT INTO Production2 (
            product_code,
            planned_qty,
            status,
            planned_start_date,
            planned_end_date,
            created_date
        ) VALUES (
            #{productCode},
            #{plannedQty},
            #{status},
            #{plannedStartDate},
            #{plannedEndDate},
            SYSDATE
        )
    </insert>

    <!-- 생산 LOT 수정 -->
    <update id="updateProduction" parameterType="kr.or.mes.dto.Production2DTO">
        UPDATE Production2 SET
            product_code = #{productCode},
            planned_qty = #{plannedQty},
            actual_qty = #{actualQty},
            status = #{status},
            planned_start_date = #{plannedStartDate},
            planned_end_date = #{plannedEndDate},
            actual_start_date = #{actualStartDate},
            actual_end_date = #{actualEndDate},
            updated_date = SYSDATE,
            updated_by = #{updatedBy}
        WHERE lot_number = #{lotNumber}
    </update>

    <!-- 생산 LOT 삭제 -->
    <delete id="deleteProduction" parameterType="string">
        DELETE FROM Production2 WHERE lot_number = #{lotNumber}
    </delete>

    <!-- 생산 LOT 상태 업데이트 -->
    <update id="updateProductionStatus" parameterType="kr.or.mes.dto.Production2DTO">
        UPDATE Production2 SET
            status = #{status},
            updated_date = SYSDATE,
            updated_by = #{updatedBy}
        WHERE lot_number = #{lotNumber}
    </update>

    <!-- 생산 LOT 실제 수량 업데이트 -->
    <update id="updateActualQuantity" parameterType="kr.or.mes.dto.Production2DTO">
        UPDATE Production2 SET
            actual_qty = #{actualQty},
            updated_date = SYSDATE,
            updated_by = #{updatedBy}
        WHERE lot_number = #{lotNumber}
    </update>

    <!-- 완제품 목록 조회 (생산계획 등록용) -->
    <select id="selectFinishedGoods" resultType="kr.or.mes.dto.Standard2DTO">
        SELECT 
            item_code as itemCode,
            item_name as itemName,
            item_type as itemType,
            unit
        FROM Standard2
        WHERE item_type = 'FG'
        ORDER BY item_code
    </select>

    <!-- 상태별 생산 LOT 조회 (Standard 테이블과 조인) -->
    <select id="selectProductionByStatus" parameterType="string" resultType="kr.or.mes.dto.Production2DTO">
        SELECT 
            p.lot_number as lotNumber,
            p.product_code as productCode,
            s.item_name as productName,
            p.planned_qty as plannedQty,
            p.actual_qty as actualQty,
            p.status,
            p.planned_start_date as plannedStartDate,
            p.planned_end_date as plannedEndDate,
            p.actual_start_date as actualStartDate,
            p.actual_end_date as actualEndDate,
            p.created_date as createdDate,
            p.updated_date as updatedDate,
            p.created_by as createdBy,
            p.updated_by as updatedBy
        FROM Production2 p
        LEFT JOIN Standard2 s ON p.product_code = s.item_code
        WHERE p.status = #{status}
        ORDER BY p.created_date DESC
    </select>

    <!-- 상태별 생산 LOT 조회 -->
    <select id="selectByStatus" parameterType="string" resultType="kr.or.mes.dto.Production2DTO">
        SELECT 
            p.lot_number as lotNumber,
            p.product_code as productCode,
            s.item_name as productName,
            p.planned_qty as plannedQty,
            p.actual_qty as actualQty,
            p.status,
            p.planned_start_date as plannedStartDate,
            p.planned_end_date as plannedEndDate,
            p.actual_start_date as actualStartDate,
            p.actual_end_date as actualEndDate,
            p.created_date as createdDate,
            p.updated_date as updatedDate,
            p.created_by as createdBy,
            p.updated_by as updatedBy
        FROM Production2 p
        LEFT JOIN Standard2 s ON p.product_code = s.item_code
        WHERE p.status = #{status}
        ORDER BY p.created_date DESC
    </select>

</mapper>
